
//Merge Sort.  recursively call on the array until you get base 1.
// once you get there.  start the sorting and merging of the arrays working your way up.  
//mergeSort function cuts the array into base 1. mergeSortedArray function will sort and merge the array into whole. 

var testArr = [88, 22, 44, 12, 99, 111, 9, 15, 49];

function mergeSort(arr) {
    if (arr.length <= 1) {
        return arr;
    }

    const middle = Math.floor(arr.length / 2);
    const left = arr.slice(0, middle);
    const right = arr.slice(middle);

    const arr1 = mergeSort(left);
    const arr2 = mergeSort(right);

    return mergeSortedArray(arr1,arr2)
}


function mergeSortedArray(arr1, arr2) {
    let sortedArray = [];
    let i = 0;
    let j = 0;

    while (i < arr1.length && j < arr2.length) {
        if (arr1[i] < arr2[j]) {
            sortedArray.push(arr1[i]);
            i++;
        } else {
            sortedArray.push(arr2[j]);
            j++;
        }
    }

    while (i < arr1.length) {
        sortedArray.push(arr1[i]);
        i++;
    }

    while (j < arr2.length) {
        sortedArray.push(arr2[j]);
        j++;
    }

    return sortedArray;
}

console.log(mergeSort(testArr));
