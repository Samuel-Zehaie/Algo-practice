//findObjectFilter ({searFor}, [itemsArr])


//given a 'search for' {object} with primitive values and a list of objects
// return a new list of objects containing the same key value paris as a search for

//given searchFor and items

const items = [
    { firstName: "Bob", lastName: "Robert", age: 31 },
    { firstName: "John", lastName: "Smith", age: 25 },
    { firstName: "Bob", lastName: "White", age: 31 },
    { firstName: "Bob", lastName: "Smith", age: 27 },
];

//db.ninjas.find({fistName:"Bob", age:31})
const searchFor1 = {
    firstName: "Bob",
    age: 31
};

const output1 = [
    { fistName: "Bob", lastName: "Robert", age: 31 },
    { firstName: "Bob", lastName: "white", age: 31 },
    //{fistName: "Bob", lastName:"Smith", age:27},
];


const searchFor2 = {
    lastName: "Smith",
};

const output2 = [
    { fistName: "John", lastName: "Smith", age: 25 },
    { firstName: "Bob", lastName: "Smith", age: 27 },
];

function findObjectsFilter(searchObj, items) {
   let Array=[]
    for (let someKey of items) {
        let isMatch=true
        for (let search in searchObj) {
            if (searchObj[search] !== someKey[search]) {
                isMatch=false
                break
            }
        }
        if (isMatch) {
            Array.push(someKey)
        }
    }
    return Array
}

console.log(findObjectsFilter(searchFor1, items))
console.log(findObjectsFilter(searchFor2,items))
